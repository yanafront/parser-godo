import OpenAI from 'openai';
import dotenv from "dotenv";

dotenv.config();

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export async function sendMessage(text: string) : Promise<string>{
  try {
    console.log(`ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤ OpenAI:`, text.substring(0, 100) + (text.length > 100 ? '...' : ''));
    
    const response = await client.chat.completions.create({
      model: 'gpt-3.5-turbo',
      messages: [
        {
          role: 'system',
          content: `–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –¢—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—á–∞—Ç—å –°–¢–†–û–ì–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON. –ù–∏–∫–∞–∫–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ —Ç–µ–∫—Å—Ç–∞!

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: {"phone": "–∫–æ–Ω—Ç–∞–∫—Ç", "message": "—Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏"}

–ü—Ä–∞–≤–∏–ª–∞:
1. –ï—Å–ª–∏ –ù–ï –≤–∞–∫–∞–Ω—Å–∏—è - –æ—Ç–≤–µ—Ç—å: {"phone": "", "message": "–ù–µ –≤–∞–∫–∞–Ω—Å–∏—è"}
2. –ï—Å–ª–∏ –≤–∞–∫–∞–Ω—Å–∏—è - –Ω–∞–π–¥–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–π —Ç–µ–∫—Å—Ç
3. –ò—Å–ø–æ–ª—å–∑—É–π HTML —Ç–µ–≥–∏ <b>—Ç–µ–∫—Å—Ç</b> –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
4. –°—Ç—Ä—É–∫—Ç—É—Ä–∞: üíº <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å</b>, üè¢ <b>–ö–æ–º–ø–∞–Ω–∏—è:</b>, üí∞ <b>–ó–∞—Ä–ø–ª–∞—Ç–∞:</b>, üìã <b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>, üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>
5. –í JSON –∏—Å–ø–æ–ª—å–∑—É–π \\n –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫ (–Ω–µ —Ä–µ–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã!)
6. JSON –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –û–î–ù–û–ô —Å—Ç—Ä–æ–∫–µ!

–ü–†–ò–ú–ï–† –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –û–¢–í–ï–¢–ê:
{"phone": "+375291234567", "message": "üíº <b>–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º</b>\\nüè¢ <b>–ö–æ–º–ø–∞–Ω–∏—è:</b> –û–û–û \\"–ü—Ä–∏–º–µ—Ä\\"\\nüí∞ <b>–ó–∞—Ä–ø–ª–∞—Ç–∞:</b> –æ—Ç 1000 BYN\\nüìã <b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b> –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –æ—Ç 1 –≥–æ–¥–∞\\nüìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b> +375291234567"}

–ó–ê–ü–†–ï–©–ï–ù–û: –ø–∏—Å–∞—Ç—å —á—Ç–æ-–ª–∏–±–æ –∫—Ä–æ–º–µ JSON!`
        },
        {
          role: 'user',
          content: text
        }
      ],
      temperature: 0.7,
    });

    const result = response.choices[0].message.content || "–ù–µ –≤–∞–∫–∞–Ω—Å–∏—è";
    console.log(`ü§ñ OpenAI –æ—Ç–≤–µ—Ç–∏–ª:`, result);
    return result;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ OpenAI:`, error);
    return "–ù–µ –≤–∞–∫–∞–Ω—Å–∏—è";
  }
}